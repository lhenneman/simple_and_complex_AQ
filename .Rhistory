setwd( '~/Dropbox/Harvard/Manuscripts/eval_local_exposure/CopyEdits_JESEE/Repo/')
## ====================================================== ##
#   read in the data,
## ====================================================== ##
# annual data
data.in <- fread( 'dataset.csv')
summary( data.in)
library( data.table)
library( ggplot2)
library( viridis)
setwd( '~/Dropbox/Harvard/Manuscripts/eval_local_exposure/CopyEdits_JESEE/Repo/')
## ====================================================== ##
#   read in the data,
## ====================================================== ##
# annual data
data.in <- fread( 'dataset.csv')
summary( data.in)
# monthly data
data.month.in <- fread( 'dataset_monthly.csv')
summary( data.month.in)
## ====================================================== ##
#   ANNUAL: summarize, melt for easier plotting
## ====================================================== ##
# impacts by state -- total from all coal units
data.in_bystate <- data.in[, .( idwe_bystate = sum( idwe.pw),
hyads_bystate = sum( hyads.pw),
adj.initial_bystate = sum( initial)),
by = .( state, year)]
data.in.m <- melt( data.in, id.vars = c( 'uID', 'year', 'state', 'pop', 'idwe.pw', 'hyads.pw'),
measure.vars = c( 'initial', 'layers_2-5', 'stack_height',
'stack_height_plus1', 'stack_height_plus2'),
variable.name = 'adj_name', value.name = 'adj.pw')
# factorize state to keep order
states.use <- c( 'US', 'CA', 'CO', 'TX', 'WI', 'KY', 'GA', 'PA')
ranks_adj_all[, state := factor(`state`, levels =  states.use)]
data.in.m[, state := factor(`state`, levels =  states.use)]
## ====================================================== ##
#  Figure 2
#  plot top 50 ranked facilities for adjoint
## ====================================================== ##
# Rank adjoint facilities by impact on each state
data.in.m[, adj_popwgt.rank := frank( adj.pw), by = .( year, adj_name, state)]
# create the plot using the function above
ranks_US50.adj <- plot_ranked_facs( ranks.dt = data.in.m,
state.abbrev = 'US',
rank.name = 'adj_popwgt.rank',
size.var = 'adj.pw',
size.name = 'Adjoint population-weighted',
toprank = 50,
geo.name = NULL,
dist.scalebar = 1000,
latlonrange.year = 2006,
xlims = c(-123, -68),
ylims = c(25, 49)
)
# source R script containing plotting functions
source( 'functions.R')
# create the plot using the function above
ranks_US50.adj <- plot_ranked_facs( ranks.dt = data.in.m,
state.abbrev = 'US',
rank.name = 'adj_popwgt.rank',
size.var = 'adj.pw',
size.name = 'Adjoint population-weighted',
toprank = 50,
geo.name = NULL,
dist.scalebar = 1000,
latlonrange.year = 2006,
xlims = c(-123, -68),
ylims = c(25, 49)
)
ranks_US50.adj$plplot
ranks_US50.adj$plplot
ranks_US50.adj$plot
## ====================================================== ##
#  Figure 3
#  Evaluation by year/state
## ====================================================== ##
## calculate the evaluation metrics for HyADS and IDWE
eval.hyads <- data.in.m[, eval.fn( hyads.pw, adj.pw, 'HyADS'), by = .( state, year, adj_name)]
eval.idwe  <- data.in.m[, eval.fn( idwe.pw,  adj.pw, 'IDWE'),  by = .( state, year, adj_name)]
eval.all <- rbind( eval.hyads, eval.idwe)
# melt
eval.all.m <- melt( eval.all, id.vars = c( 'state', 'year', 'adj_name', 'mod.name'),
variable.name = 'metric')
# redenane metric names
eval.all.m[metric == 'R.p', metric := 'Pearson~R']
eval.all.m[metric == 'R.s', metric := 'Spearman~R']
## define adjoint names, set up for plotting
adj.names <- data.table( adj_name = c( "initial", "layers_2-5", "stack_height", "stack_height_plus1", "stack_height_plus2"),
adj_name.adjust = c("Average", "Layers 2-5", "Stack Height", "Stack Height +1", "Stack Height +2"))
corrs.all <- merge( eval.all.m, adj.names, by = 'adj_name')
corrs.all[, state.factor := factor( state, levels = states.use)]
# don't plot very high NME for CA and CO
cors.all.use <- corrs.all[ metric %in% c( 'Pearson~R', 'NMB', 'RMSE')]
corrs.removed <- cors.all.use[ state.factor %in% c( 'CA', 'CO') & value > 2]
cors.all.use[ state.factor %in% c( 'CA', 'CO') & value > 2, value := NA]
cors.all.use[ metric == 'NMB', value := value * 100]
cors.all.use[ metric == 'NMB', metric := 'NMB~"%"']
cors.all.use[ metric == 'RMSE', metric := 'RMSE~mu*"g"~m^{-3}']
# create the plot
gguse <- ggplot( data = cors.all.use,
aes( x = state.factor,
y = value,
color = mod.name,
shape = adj_name.adjust
)) +
geom_hline( yintercept = 0) +
geom_point( size = 4,
position = position_dodge( width = .25)) +
scale_shape_manual( values = c( 0:2, 5:6)) +
scale_color_manual( values = c( '#479ddd', '#dd8747')) +
geom_vline( xintercept = 1.5,
lty = 2) +
facet_grid( metric ~ year, scales = 'free_y', labeller = label_parsed) +
expand_limits( y = 0) +
scale_y_continuous( expand = expansion( .1)) +
guides(
color = guide_legend(order = 1,
keywidth = 1.5),
shape = guide_legend(order = 0,
keywidth = 1.5)
) +
theme_bw() +
theme( axis.text = element_text( size = 12),
axis.title = element_blank( ),
legend.direction = 'horizontal',
legend.position = 'bottom',
legend.text = element_text( size = 12),
legend.title = element_blank(),
panel.grid.major.x = element_line( size = 10,
color = 'grey90'),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_text( size = 18))
??expansion
